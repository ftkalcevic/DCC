/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DCCCONFIGVIEWBASE_HPP
#define DCCCONFIGVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/dccconfig_screen/DCCConfigPresenter.hpp>
#include <gui/containers/StatusBar.hpp>
#include <gui/containers/FunctionButtons.hpp>
#include <touchgfx/containers/ScrollableContainer.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/containers/scrollers/ScrollWheel.hpp>
#include <gui/containers/ListItemDecoder.hpp>
#include <touchgfx/mixins/ClickListener.hpp>

class DCCConfigViewBase : public touchgfx::View<DCCConfigPresenter>
{
public:
    DCCConfigViewBase();
    virtual ~DCCConfigViewBase() {}
    virtual void setupScreen();

    virtual void scrollWheelDecodersUpdateItem(ListItemDecoder& item, int16_t itemIndex)
    {
        // Override and implement this function in DCCConfig
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    StatusBar statusBar;
    FunctionButtons functionButtons;
    touchgfx::ScrollableContainer scrollableContainer1;
    touchgfx::TiledImage backgroundImage;
    touchgfx::Line line1;
    touchgfx::PainterRGB888 line1Painter;
    touchgfx::Line line2;
    touchgfx::PainterRGB888 line2Painter;
    touchgfx::Line line3;
    touchgfx::PainterRGB888 line3Painter;
    touchgfx::Line line4;
    touchgfx::PainterRGB888 line4Painter;
    touchgfx::ToggleButton toggleProgTrack;
    touchgfx::ClickListener< touchgfx::ScrollWheel > scrollWheelDecoders;
    touchgfx::DrawableListItems<ListItemDecoder, 4> scrollWheelDecodersListItems;

    touchgfx::TiledImage tiledImageBottomMask;
    touchgfx::TiledImage tiledImageTopMask;

private:
    touchgfx::Callback<DCCConfigViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // DCCCONFIGVIEWBASE_HPP
